import { test, expect } from "vitest"

const payloads = [
  {
    IsJsEnabled: 0,
    KeywordDep: "40, RUE ABBÉ GRÉGOIRE - GRENOBLE",
    NumDep: 40,
    PointDep: "152084_3_40",
    Departure: {
      $type: "Cityway.TSI.Core.Model.Transport.RoadModel, Cityway.TSI.Core",
      Length: 1151,
      Number: 40,
      RoadId: 152084,
      IsRoadLength: true,
      FirstNumber: 6,
      LastNumber: 112,
      Id: 152084,
      Name: "RUE ABBÉ GRÉGOIRE",
      TypePoint: 3,
      Locality: {
        Id: 38185,
        Name: "GRENOBLE",
        Code: "38185",
        Longitude: 5.735874577533315,
        Latitude: 45.1858813764503,
      },
      Longitude: 5.712371085659833,
      Latitude: 45.186742070869556,
    },
    DepartureState: 0,
    LatDep: 45.1867420708696,
    LngDep: 5.71237108565983,
    KeywordArr: "HOTEL DE VILLE - GRENOBLE",
    PointArr: "2002289_4",
    Arrival: {
      $type: "Cityway.TSI.Core.Model.Transport.LogicalStopModel, Cityway.TSI.Core",
      Id: 2002289,
      Name: "HOTEL DE VILLE",
      TypePoint: 4,
      Locality: {
        Id: 38185,
        Name: "GRENOBLE",
        Code: "38185",
        Longitude: 5.735874577533315,
        Latitude: 45.1858813764503,
      },
      Longitude: 5.73744659885,
      Latitude: 45.18749204882501,
      PostalCode: "38000",
    },
    ArrivalState: 0,
    LatArr: 45.187492048825,
    LngArr: 5.73744659885,
    Date: "28/07/2024",
    TypeDate: 68,
    Hour: 13,
    Minute: 45,
    Algorithm: "Fastest",
    TypeTrip: "PlanTrip",
    Modes: ["Bus", "Coach", "Metro", "Tram", "Tod", "Tgv", "Ter", "Train", "Plane"],
    ListModes: "Bus|Coach|Metro|Tram|Tod|Tgv|Ter|Train|Plane",
    IgnoreDisruptions: false,
    WalkDistance: 2000,
    WalkSpeed: 4,
    CarDistance: 100,
    BikeDistance: 10,
    BikeSpeed: 15,
    BikeSecure: 2,
  },
  {
    // IsJsEnabled: 0,
    // KeywordDep: "40, RUE ABBÉ GRÉGOIRE - GRENOBLE",
    // NumDep: 40,
    PointDep: "152084_3_40",
    // Departure: {
    //   $type: "Cityway.TSI.Core.Model.Transport.RoadModel, Cityway.TSI.Core",
    //   Length: 1151,
    //   Number: 40,
    //   RoadId: 152084,
    //   IsRoadLength: true,
    //   FirstNumber: 6,
    //   LastNumber: 112,
    //   Id: 152084,
    //   Name: "RUE ABBÉ GRÉGOIRE",
    //   TypePoint: 3,
    //   Locality: {
    //     Id: 38185,
    //     Name: "GRENOBLE",
    //     Code: "38185",
    //     Longitude: 5.735874577533315,
    //     Latitude: 45.1858813764503,
    //   },
    //   Longitude: 5.712371085659833,
    //   Latitude: 45.186742070869556,
    // },
    // DepartureState: 0,
    LatDep: 45.1867420708696,
    LngDep: 5.71237108565983,
    // KeywordArr: "HOTEL DE VILLE - GRENOBLE",
    PointArr: "2002289_4",
    // Arrival: {
    //   $type: "Cityway.TSI.Core.Model.Transport.LogicalStopModel, Cityway.TSI.Core",
    //   Id: 2002289,
    //   Name: "HOTEL DE VILLE",
    //   TypePoint: 4,
    //   Locality: {
    //     Id: 38185,
    //     Name: "GRENOBLE",
    //     Code: "38185",
    //     Longitude: 5.735874577533315,
    //     Latitude: 45.1858813764503,
    //   },
    //   Longitude: 5.73744659885,
    //   Latitude: 45.18749204882501,
    //   PostalCode: "38000",
    // },
    // ArrivalState: 0,
    LatArr: 45.187492048825,
    LngArr: 5.73744659885,
    Date: "28/07/2024",
    // TypeDate: 68,
    Hour: 13,
    Minute: 45,
    // Algorithm: "Fastest",
    // TypeTrip: "PlanTrip",
    // Modes: ["Bus", "Coach", "Metro", "Tram", "Tod", "Tgv", "Ter", "Train", "Plane"],
    // ListModes: "Bus|Coach|Metro|Tram|Tod|Tgv|Ter|Train|Plane",
    // IgnoreDisruptions: false,
    IgnoreDisruptions: true, // default to false
    WalkDistance: 2000,
    WalkSpeed: 4,
    CarDistance: 100,
    BikeDistance: 10,
    BikeSpeed: 15,
    BikeSecure: 2,
  },
  {
    PointDep: "152084_3_40",
    PointArr: "2002289_4",
    Date: new Date().toLocaleDateString("en-GB"),
    Hour: new Date().getHours(),
    Minute: new Date().getMinutes(),
  },
]
async function fetchItinisere(payload) {
  // http://localhost:8100/itinisere === https://www.itinisere.fr
  const response = await fetch("https://www.itinisere.fr/fr/itineraires/4/JourneyPlanner/PartialResult", {
    method: "POST",
    headers: { "Content-Type": "application/x-www-form-urlencoded; charset=UTF-8" },
    body: new URLSearchParams({ request: JSON.stringify(payload) }),
  })
  const text = await response.text()
  return new DOMParser().parseFromString(text, "text/html").documentElement
}
test("itinisere", async () => {
  const [html, html2] = await Promise.all(payloads.map(fetchItinisere))
  // expect(html.innerHTML).toEqual(html2.innerHTML) // session ID is different
  // const extract = (html: Element) => [...html.querySelectorAll(".panel-trip, .detail-trip")].map((el) => el.outerHTML).join("\n") // prettier-ignore
  // expect(extract(html)).toEqual(extract(html2))
  expect(html.querySelector("script")!.innerHTML).toEqual(html2.querySelector("script")!.innerHTML)
})
